From the Book: Guttag, John. Introduction to Computation and Programming Using Python: With Application to Understanding Data Second Edition  

Readings: Chapters 2.2, 2.3.1, 2.4, and 3.2  

Supplemented by lecture found at:
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-0001-introduction-to-computer-science-and-programming-in-python-fall-2016/lecture-videos/lecture-2-branching-and-iteration/  

2.2  
straightline programs: execute one statement after another in the order in which they appear, and stop when they run out of statements  

Branching programs: an instruction that tells a computer to begin executing a different part of a program rather than executing statements one-by-one  

conditional:
    • a test, i.e., an expression that evaluates to either True or False;
    • a block of code that is executed if the test evaluates to True;
    • a noptional block of code that is executed if the test evaluates to False.  

Indentation: is semantically meaningful in Python  

nested: multiple conditional statements within each other  

elif stands for “else if”  

compound Boolean expression: multiple boolean statements tied together with a statement like "and" or "or"  

constant time: the program is guaranteed to take no more than k steps to run  

computational complexity: the amount of resources required for running it  

2.3.1  
overloaded: Python allows us to change the default behavior of an operator depending on the operands that we use. This practice is referred to as "operator overloading"  

repetition operator: when the operand on the left side of the * is a list, it becomes the repetition operator. The repetition operator makes multiple copies of a list and joins them all together  

type checking: Python is a dynamically typed language. This means that the Python interpreter does type checking only as code runs, and that the type of a variable is allowed to change over its lifetime  

length of a string can be found using the len function  
value of len('abc') is 3  

Indexing can be used to extract individual characters from a string  
'abc'[0] into the interpreter will cause it to display the string 'a'  

Slicing is used to extract substrings of arbitrary length  
s[start:end] denotes the substring of s that starts at index start and ends at index end-1  

'abc'[:] is semantically equivalent to the more verbose 'abc'[0:len('abc')]  

Type conversions/type casts: The process of converting the value of one data type (integer, string, float, etc.) to another data type is called type conversion  

2.4  
iteration: Repeated execution of a set of statements is called iteration.  

looping: If the test evaluates to True, the program executes the loop body once, and then goes back to reevaluate the test. This process is repeated until the test evaluates to False, after which control passes to the code following the iteration statement  

while statement: a while loop is a control flow statement that allows code to be executed repeatedly based on a given Boolean condition  

hand-simulating the code: A code trace is a method for hand simulating the execution of your code in order to manually verify that it works correctly before you compile it. It is also known as a "code trace" or "desk check."  

3.1  
decrementing function: It will map some set of program variables to an integer. The value of the variable is non-negative when entering the loop for first time. When the value of the integer is less than 0 , loop terminates. The value is decreased each time in the loop  

guess and check: guess a solution and then plug the guess back into the problem to see if you get the correct answer. If the answer is too big or too small, make another guess that will get you closer to the goal, and continue guessing until you arrive at the correct solution  

exhaustive enumeration: brute-force search or exhaustive search, also known as generate and test, is a very general problem-solving technique and algorithmic paradigm that consists of systematically enumerating all possible candidates for the solution and checking whether each candidate satisfies the problem's statement  

3.2  
for loop: is a control flow statement for specifying iteration, which allows code to be executed repeatedly  

range: the term range may refer to one of three things: The possible values that may be stored in a variable. The upper and lower bounds of an array. An alternative to iterator  

in operator: The 'in' operator is used to check if a value exists in a sequence or not. Evaluates to true if it finds a variable in the specified sequence and false otherwise. 'not in' operator- Evaluates to true if it does not finds a variable in the specified sequence and false otherwise  


Lecture  
+ doesn't add a space implicity when adding strings together  

* operator to repeat a string that many number of times  

print with commas add spaces between values  

input makes a string of everything the user types in until they hit enter  
input always outputs a string unless you cast  


for loop range: for i in range(7)  
range(start, stop, step)  
    start defaults to zero  
    step defaults to one  
    if you give it only one number it is stop  
    if you give it two numbers it is start and stop  
    stop defaults to num - 1  

for loops are used when we know the number of interations  
while loops are more useful for things that are unpredictable, like getting user inputs  
both can use break  
for has built in counter, but while you have ot initialize and increment manually  
for can be rewritten as while but not vice versa  
